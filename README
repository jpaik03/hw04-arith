/*
 *      README
 *      Kevin Lu (klu07), Justin Paik (jpaik03)
 *      October 21, 2025
 *      arith
 * 
 *      Provides additional information about the implementation process by
 *      the programmers.
 */

ARCHITECTURE
    - Files taken from previous assignments:
        - uarray2.c/h
        - uarray2b.c/h
        - a2plain.c/h
        - a2blocked.c/h
        - a2methods.c/h
    - Related but not included files:
        - ppmdiff.c/h: used for testing the output of our program
    - Given files:
        - 40image.c/h: provided and handles command-line parsing for the 
        40image executable
        - compress40.c/h: boiler-plate code provided, stores the respsective
        arrays for each intermediate step fo compression and decompression
        and calls the respective functions in the correct order. Cleans up and
        frees memory.
        - readWriteImage.c/h: holds the functions that perform initial read and
        final write of ppm. Handles potential trimming of image.
        - The resutling 



ACKNOWLEDGEMENTS:
        - TA office hours for: 
            - helping figure out how to split up the modules
            - the implications of encaspulation and secret keeping in our
            program
                - how to have information like a struct be shared across
                modules
            - the need to pass in methods and and change it when dealing 
            with blocked or plain arrays
        - Lecture slides for bit packing, shifting, and masking

IMPLEMENTATION:
        - We hope to believe that it has all been implemented correctly, but
        of course we cannot be sure. We did go back and went for full credit
        in the readaline file.

TIME SPENT:
        ~44 hours
